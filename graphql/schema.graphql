type Query {
  authenticate(username: String!, password: String!): AuthPayload!
  resources: [Device!]!
  sections(uri: String!): [Section!]!
  section(uri: String!, index: Int!): [Directory!]!
  directory(uri: String!): DirectoryContents!
}

type AuthPayload {
  user: User!
  token: String!
}

type User {
  id: Int!
  uuid: String!
  email: String!
  joinedAt: String!
  username: String!
  title: String!
  thumb: String!
  hasPassword: Boolean!
  authToken: String!
}

type Device {
  name: String!
  product: String
  productVersion: String
  platform: String
  platformVersion: String
  device: String
  clientIdentifier: String
  createdAt: String
  lastSeenAt: String
  provides: String
  owned: Boolean
  accessToken: String
  publicAddress: String
  httpsRequired: Boolean
  synced: Boolean
  relay: Boolean
  publicAddressMatches: Boolean
  presence: Boolean
  connections: [Connection!]!
}

type Connection {
  protocol: String
  address: String
  port: Int
  uri: String
  local: Boolean
}

type Section {
  allowSync: Boolean
  art: String
  composite: String
  filters: Boolean
  refreshing: Boolean
  thumb: String
  key: String!
  secondary: Boolean
  prompt: String
  type: String
  title: String!
  agent: String
  scanner: String
  language: String
  uuid: String
  updatedAt: String
  createdAt: String
  scannedAt: String
  locations: [Location!]!
}

type Location {
  id: Int
  path: String
}

type Directory {
  key: String!
  title: String!
  uri: String!
  secondary: Boolean
  prompt: String
}

type DirectoryContents {
  directories: [Directory!]!
  videos: [Video!]!
}

type Video {
  ratingKey: Int
  key: String
  parentRatingKey: Int
  grandparentRatingKey: Int
  studio: String
  grandparentKey: String
  parentKey: String
  grandparentTitle: String
  parentTitle: String
  index: Int
  parentIndex: Int
  type: String
  title: String
  contentRating: String
  summary: String
  rating: Float
  audienceRating: Float
  viewCount: Int
  lastViewedAt: String
  year: Int
  tagline: String
  thumb: String
  parentThumb: String
  grandparentThumb: String
  grandparentArt: String
  art: String
  grandparentTheme: String
  duration: Int
  originallyAvailableAt: String
  addedAt: String
  updatedAt: String
  audienceRatingImage: String
  chapterSource: String
  primaryExtraKey: String
  ratingImage: String
  media: [Media!]!
  genres: [String!]
  directors: [String!]
  writers: [String!]
  countries: [String!]
  roles: [String!]
}

type Media {
  videoResolution: String
  id: Int
  duration: Int
  bitrate: Int
  width: Int
  height: Int
  aspectRatio: Float
  audioChannels: Int
  audioCodec: String
  videoCodec: String
  container: String
  videoFrameRate: String
  audioProfile: String
  videoProfile: String
  parts: [MediaPart!]!
}

type MediaPart {
  id: Int
  key: String
  duration: Int
  file: String
  size: Float
  audioProfile: String
  container: String
  has64bitOffsets: Boolean
  optimizedForStreaming: Boolean
  videoProfile: String
}
